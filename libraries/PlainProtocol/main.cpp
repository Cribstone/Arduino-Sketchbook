//
// main.cpp
// Main file
// ----------------------------------
// Developed with embedXcode
// http://embedXcode.weebly.com
//
// Project PlainProtocol
//
// Created by qiao, 13-4-2 上午9:17
// qiao
//
//
// Copyright © qiao, 2013年
// Licence CC = BY NC SA
//
// See PlainProtocol.ino and ReadMe.txt for references
//
// ----------------------------------
// DO NOT EDIT THIS FILE.
// THE SKETCH IS IN PlainProtocol.ino
// ----------------------------------
//


// Core library
#if defined(MPIDE) // chipKIT specific
#include "WProgram.h"
#elif defined(DIGISPARK) // Digispark specific
#include "Arduino.h"
#elif defined(ENERGIA) // LaunchPad, FraunchPad and StellarPad specific
#include "Energia.h"
#if defined(__LM4F120H5QR__) // StellarPad specific
#include "inc/lm4f120h5qr.h"
#include "inc/hw_gpio.h"
#include "driverlib/rom.h"
#include "driverlib/sysctl.h"
#include "driverlib/eeprom.h"
#endif
#elif defined(MAPLE_IDE) // Maple specific
#include "WProgram.h"
#elif defined(CORE_TEENSY) // Teensy specific
#include "WProgram.h"
#elif defined(WIRING) // Wiring specific
#include "Wiring.h"
#elif defined(ARDUINO) && (ARDUINO >= 100) // Arduino 1.0x and 1.5x specific
#include "Arduino.h"
#elif defined(ARDUINO) && (ARDUINO < 100)  // Arduino 23 specific
#include "WProgram.h"
#else // error
#error Platform not defined
#endif // end IDE

// Sketch
#include "PlainProtocol.ino"

#if defined(MAPLE_IDE) // Maple specific
// Force init to be called *first*, i.e. before static object allocation.
// Otherwise, statically allocated objects that need libmaple may fail.
__attribute__(( constructor )) void premain() {
    init();
}
#endif

// Main
int main(void) {
    
    // Init
    
#if defined(ENERGIA) // LaunchPad, FraunchPad and StellarPad specific
#if defined(__LM4F120H5QR__) // StellarPad specific
    ROM_FPULazyStackingEnable();
    
    timerInit();
    
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOC);
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOE);
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
    
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_EEPROM0);
    if (ROM_EEPROMInit() == EEPROM_INIT_ERROR) {
    	if (ROM_EEPROMInit() != EEPROM_INIT_ERROR)
    		ROM_EEPROMMassErase();
    }
    
    //Unlock and commit NMI pins PD7 and PF0
    HWREG(GPIO_PORTF_BASE + GPIO_O_LOCK) = 0x4C4F434B;
    HWREG(GPIO_PORTF_BASE + GPIO_O_CR) |= 0x1;
    HWREG(GPIO_PORTD_BASE + GPIO_O_LOCK) = 0x4C4F434B;
    HWREG(GPIO_PORTD_BASE + GPIO_O_CR) |= 0x80;
    
#else // LaunchPad and FraunchPad specific
    init();
#endif // end Energia
    
#elif defined(CORE_TEENSY) // Teensy general
#if defined(__AVR_ATmega32U4__) // Teensy2 specific
    _init_Teensyduino_internal_();
#endif
    
#elif defined(WIRING) // Wiring specific
    boardInit();
    
#else // General case
    init();
    delay(1);
    
#if defined(ARDUINO) && (ARDUINO >= 100) // Arduino 1.0 + 1.5 specific
#if defined(USBCON) // Arduino 1.0 + 1.5 specific
    USBDevice.attach();
#endif
#endif
    
#endif
    
    // Setup
    
    setup();
    
    // Loop
    
    for (;;) {
        
        loop();
        
#if defined(ENERGIA)
        if (serialEventRun) serialEventRun();
        
#elif defined(MPIDE) // chipKIT specific
#elif defined(DIGISPARK) // Digispark specific
        
#elif defined(CORE_TEENSY) // Teensy general
#if defined(__MK20DX128__) // Teensy 3 specific
        yield();
#endif
        
        //#ifdef USB_SERIAL
        //        usb_serial_class Serial;
        //#endif // end USB_SERIAL for Teensy
        
#elif defined(WIRING)
#elif defined(ARDUINO) && (ARDUINO >= 100) // Arduino 1.0 + 1.5 specific
        if (serialEventRun) serialEventRun();
#endif
    }
    
    return 0;
}
